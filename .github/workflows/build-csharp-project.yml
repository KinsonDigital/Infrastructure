name: ⚙️Build C# Project
run-name: ⚙️Build Project (${{ inputs.project-name }})


defaults:
  run:
    shell: pwsh
  
  
on:
  workflow_call:
    inputs:
      project-name:
        required: true
        description: "The name of the C# project to validate."
        type: string
      build-config:
        required: true
        description: The build configuration to use (e.g. 'Debug', 'Release').
        type: string
      net-sdk-version:
        required: true
        description: The .NET SDK version to use (e.g. '7.0.x').
        type: string
      base-path:
        required: false
        description: The base directory path to start the search.
        type: string
      runs-on:
        required: false
        description: The type of machine to run the job on.
        type: string
        default: ubuntu-latest
      checkout-repository:
        required: false
        description: The git repository to checkout the code from.
        type: string
        default: ${{ github.repository }}
      checkout-ref:
        required: false
        description: The git reference to checkout the code at.
        type: string
        default: ${{ github.ref }}
    secrets:
      cicd-pat:
        description: "The GitHub Personal Access Token (PAT) used to authenticate to the GitHub API."
        required: true


jobs:
  print_validate_workflow:
    name: Print & Validate Build DotNet Proj Workflow
    runs-on: ubuntu-latest
    steps:
      - name: Print Environment Variables
        run: Get-ChildItem -Path Env:* | Sort-Object Name

      - name: Validate Workflow Inputs
        run: |
          $sdkVersion = "${{ inputs.net-sdk-version }}".Trim().ToLower();
          $sdkVersion = $sdkVersion.StartsWith("v") ? $sdkVersion.Substring(1) : $sdkVersion;

          if ("${{ inputs.project-name }}".Trim().ToLower() -eq "") {
            Write-Host "::error::The 'project-name' workflow input cannot be empty.";
            exit 1;
          }


          if ("${{ inputs.build-config }}".Trim().ToLower() -eq "") {
            Write-Host "::error::The 'build-config' workflow input cannot be empty.";
            exit 1;
          }


          if ("${{ inputs.build-config }}" -ne "Debug" -and "${{ inputs.build-config }}" -ne "Release") {
            Write-Host "::error::The 'build-config' workflow input is invalid.  Expected values: 'Debug' or 'Release'";
            exit 1;
          }


          # Verify that the dotnet sdk version has valid syntax
          if ($sdkVersion -match "[0-9]+\.[0-9]+\.[0-9]+") {
            Write-Host "::notice::The 'net-sdk-version' workflow input is valid.";
          } else {
            Write-Host "::error::The 'net-sdk-version' workflow input is invalid.  Expected version format: '#.#.#'";
            exit 1;
          }


  resolve_proj_file_path:
    name: Resolving ${{ inputs.project-name }} Project File Path
    needs: print_validate_workflow
    uses: KinsonDigital/Infrastructure/.github/workflows/resolve-csharp-proj-file.yml@v14.0.0
    with:
      project-name: ${{ inputs.project-name }}
      base-path: ${{ inputs.base-path }}
    secrets:
      cicd-pat: ${{ secrets.cicd-pat }}


  build_project:
    name: Building ${{ inputs.project-name }} Project
    needs: resolve_proj_file_path
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: ${{ inputs.checkout-repository }}
          ref: ${{ inputs.checkout-ref }}

      - name: Setup .NET SDK ${{ inputs.net-sdk-version }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.net-sdk-version }}

      - name: Restore ${{ inputs.project-name }} Dependencies
        run: dotnet restore "${{ needs.resolve_proj_file_path.outputs.project-file-path }}"

      - name: Build Project ${{ inputs.project-name }}
        run: dotnet build "${{ needs.resolve_proj_file_path.outputs.project-file-path }}" `
          -c ${{ inputs.build-config }} `
          --no-restore
