name: Resolve CSharp Project File Path


defaults:
  run:
    shell: pwsh
  
  
on:
  workflow_call:
    inputs:
      project-name:
        required: true
        description: "The name of the C# project to validate."
        type: string
      base-path:
        required: false
        description: The the fully qualified base directory path to start the search.
        type: string
    outputs:
      project-file-path:
        description: The resolve csharp project file path.
        value: ${{ jobs.resolve_proj_file_path.outputs.project-file-path }}
    secrets:
      cicd-pat:
        description: "The GitHub Personal Access Token (PAT) used to authenticate to the GitHub API."
        required: true


jobs:
  resolve_proj_file_path:
    name: Resolve Project File Path
    runs-on: ubuntu-latest
    outputs:
      project-file-path: ${{ steps.resolve-file-path.outputs.project-file-path }}
    steps:
      - name: Print Environment Variables
        run: Get-ChildItem -Path Env:* | Sort-Object Name

      - uses: actions/checkout@v4

      - name: Set Up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ vars.DENO_VERSION }}

      - name: Create Script URL
        id: script-url
        run: |
          # Construct the URL to the organizations CICD scripts
          $url = "${{ vars.SCRIPT_BASE_URL }}/${{ vars.CICD_SCRIPTS_VERSION }}/${{ vars.SCRIPT_RELATIVE_DIR_PATH }}";
          $url = $url.Replace("\", "/").Replace("//", "/");
          $url = $url.EndsWith("/") ? $url.Substring(0, $url.Length - 1) : $url;
          
          Write-Host "::notice::DotNet Lib Release Script URL: $url";
          "url=$url" >> "$env:GITHUB_OUTPUT";

      - name: Resolve Project File Path
        id: resolve-file-path
        run: |
          $scriptUrl = "${{ steps.script-url.outputs.url }}/resolve-csproj.ts";

          <# Deno Args:
            1. The name of the project
            2. The fully qualified directory path to start the search
            3. The GitHub token
          #>
          deno run `
            --allow-read `
            --allow-write `
            --allow-env `
            "$scriptUrl" `
            "${{ vars.PROJECT_NAME }}" `
            "${{ inputs.base-path }}" `
            "${{ secrets.cicd-pat }}";
