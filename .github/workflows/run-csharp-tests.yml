name: Unit C# Tests


defaults:
  run:
    shell: pwsh
  
  
on:
  workflow_call:
    inputs:
      project-name:
        required: true
        description: The name of the C# project to validate
        type: string
      build-config:
        required: true
        description: The build configuration to use (e.g. 'Debug', 'Release')
        type: string
      net-sdk-version:
        required: true
        description: The .NET SDK version to use (e.g. '7.0.x')
        type: string


jobs:
  run_unit_tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest # TODO: Turn this into an input but not required and with default value of ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Resolve Project File Path
        id: resolve-file-path
        run: |
          $result = Get-ChildItem -Path "${{ github.workspace }}/**/${{ inputs.project-name }}.csproj" -Recurse | ForEach-Object{$_.FullName};

          $resultType = $result ? $result.GetType().Name : $null;

          # If null, no project file was found
          if (!$result) {
            Write-Host "::error::Project file not found";
            exit 1; # Fail Workflow
          } elseif ($resultType -ne "String") {
            Write-Host "::error::Found too many project files!!";

            foreach ($item in $result) {
                Write-Host "`t$item";
            }

              exit 1; # Fail Workflow
          } else {
            Write-Host "Project File Path Resolved To: $result";
            "file-path=$result" >> $env:GITHUB_OUTPUT;
          }

      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ inputs.net-sdk-version }}

      - name: Restore Dependencies
        run: dotnet restore "${{ steps.resolve-file-path.outputs.file-path }}"

      - name: Execute Unit Tests
        run: dotnet build "${{ steps.resolve-file-path.outputs.file-path }}" `
          -c ${{ inputs.build-config }} `
          --no-restore
