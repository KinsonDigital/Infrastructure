name: âœ…ðŸ¤–Sync Bot & Status Check


defaults:
  run:
    shell: pwsh


on:
  workflow_dispatch:
    inputs:
      run-type:
        description: "The type of run to execute."
        required: true
        type: choice
        options: ["Sync Bot", "Sync Status Check"]
      issurOrPRNumber:
        description: "Sync bot uses an issue # and the status check uses a pr #."
        required: true
        type: number
        default: 0 # TODO: validate if this value
  issues:
    types: [edited, labeled, unlabeled, assigned, unassigned, milestoned, demilestoned]
  pull_request:
    branches: [master, preview]  


# TODO: combine the pr sync process upon intial pr creation into this yaml instead of using a different workflow

jobs:
  sync_bot_or_status_check:
    name: Run Sync Bot
    if: (github.event_name == 'issues') || (github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature/')) || (github.event_name == 'workflow_dispatch' && startsWith(github.ref_name, 'feature/'))
    runs-on: ubuntu-latest
    steps:
      - name: Set Up Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Run Bot
        run: |
          echo "Head Ref: ${{ github.head_ref}}";

          # $scriptUrl = "${{ vars.SCRIPT_BASE_URL }}/${{ vars.CICD_SCRIPTS_VERSION }}/${{ vars.SCRIPT_RELATIVE_DIR_PATH}}/sync-bot-status-check.ts";

          # $eventName = "${{ github.event_name }}";
          
          # echo "Event Name: $eventName";
          # echo "Project Name: ${{ vars.PROJECT_NAME }}";
          # echo "Default PR Reviewer: ${{ vars.DEFAULT_PR_REVIEWER }}";

          # if ($eventName -eq "workflow_dispatch") {
          #   echo "Manual Execution:";
          #   echo "`tRun Type: ${{ inputs.run-type }}";
          #   echo "`tIssue Or PR Number: ${{ inputs.issurOrPRNumber }}";

          #   $eventType = "${{ inputs.run-type }}" -eq "Sync Bot" ? "issue" : "pr";
          #   $issueNumber = "${{ inputs.issurOrPRNumber }}";
            
          #   if ($eventName -eq "workflow_dispatch" -and $issueNumber -le 0) {
          #     echo "The issue or PR number must be a value greater than 0.";
          #     exit 1;
          #   }
          # } else {
          #   $eventType = $eventName -eq "issues" ? "issue" : "pr";
          #   $issueNumber = $eventName -eq "issues" ? "${{ github.event.issue.number }}" : "${{ github.event.number }}";

          #   echo "Issue Or PR Number: $issueNumber";
          # }

          # deno run `
          #   --allow-net `
          #   "$scriptUrl" `
          #   "${{ vars.PROJECT_NAME }}" `
          #   "$issueNumber" `
          #   "${{ vars.DEFAULT_PR_REVIEWER }}" `
          #   "$eventType" `
          #   "${{ secrets.CICD_REST_API }}";
